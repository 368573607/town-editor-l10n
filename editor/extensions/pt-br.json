{
    "ev3.beepNote": "som de bip [NOTE] por [TIME] segundos",
    "ev3.buttonPressed": "botão [PORT] pressionado?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "quando botão [PORT] estiver pressionado",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "clear display",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "botão [BTN] pressionado?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "quando o botão [BTN] estiver pressionado",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "music.categoryName": "Música",
    "music.changeTempo": "alterar ritmo por [TEMPO]",
    "music.drumBass": "(2) Bumbo",
    "music.drumBongo": "(13) Bongô",
    "music.drumCabasa": "(15) Afoxé",
    "music.drumClaves": "(9) Claves Cubanas",
    "music.drumClosedHiHat": "(6) Prato Chimbau",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Chocalho",
    "music.drumCrashCymbal": "(4) Prato",
    "music.drumCuica": "(18) Cuíca",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Palmas",
    "music.drumOpenHiHat": "(5) Prato Hi-Hat",
    "music.drumSideStick": "(3) Bastão Lateral",
    "music.drumSnare": "(1) Tarol",
    "music.drumTambourine": "(7) Pandeiro",
    "music.drumTriangle": "(12) Triângulo",
    "music.drumVibraslap": "(17) Queixada",
    "music.drumWoodBlock": "(10) Bloco Sonoro",
    "music.getTempo": "ritmo",
    "music.instrumentBass": "(6) Baixo",
    "music.instrumentBassoon": "(14) Fagote",
    "music.instrumentCello": "(8) Violoncelo",
    "music.instrumentChoir": "(15) Coral",
    "music.instrumentClarinet": "(10) Clarinete",
    "music.instrumentElectricGuitar": "(5) Guitarra Elétrica",
    "music.instrumentElectricPiano": "(2) Teclado",
    "music.instrumentFlute": "(12) Flauta",
    "music.instrumentGuitar": "(4) Violão",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Caixa de Música",
    "music.instrumentOrgan": "(3) Órgão",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxofone",
    "music.instrumentSteelDrum": "(18) Tambor de Aço",
    "music.instrumentSynthLead": "(20) Sintetizador principal",
    "music.instrumentSynthPad": "(21) Bloco Sintetizador",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibrafone",
    "music.instrumentWoodenFlute": "(13) Flauta de madeira",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "tocar tambor [DRUM] por [BEATS] batidas",
    "music.playNoteForBeats": "toque a nota [NOTE] por [BEATS] batidas",
    "music.restForBeats": "pausa por [BEATS] batidas",
    "music.setInstrument": "definir instrumento para [INSTRUMENT]",
    "music.setTempo": "ajuste tempo para [TEMPO]",
    "pen.categoryName": "Caneta",
    "pen.changeColorParam": "adicione [VALUE]ao parâmetro [COLOR_PARAM] da caneta",
    "pen.changeHue": "adicione [HUE]à cor da caneta ",
    "pen.changeShade": "adicione [SHADE]à tonalidade da caneta ",
    "pen.changeSize": "adicione [SIZE]ao tamanho da caneta",
    "pen.clear": "apague tudo",
    "pen.colorMenu.brightness": "brilho",
    "pen.colorMenu.color": "cor",
    "pen.colorMenu.saturation": "saturação",
    "pen.colorMenu.transparency": "transparência",
    "pen.penDown": "use a caneta",
    "pen.penUp": "levante a caneta",
    "pen.setColor": "mude a cor da caneta para [COLOR]",
    "pen.setColorParam": "Mude o parâmetro [COLOR_PARAM] da caneta para [VALUE]",
    "pen.setHue": "mude a cor da caneta para [HUE]",
    "pen.setShade": "mude a tonalidade da caneta para [SHADE]",
    "pen.setSize": "mude o tamanho da caneta para [SIZE]",
    "pen.stamp": "carimbe",
    "speech.defaultWhenIHearValue": "vamos lá",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "escute e espere",
    "speech.speechReporter": "fala",
    "speech.whenIHear": "quando eu escutar [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "olá",
    "translate.translateBlock": "traduzir [WORDS] para [LANGUAGE]",
    "translate.viewerLanguage": "idioma",
    "videoSensing.categoryName": "Detecção de Vídeo",
    "videoSensing.direction": "direção",
    "videoSensing.motion": "movimento",
    "videoSensing.off": "desligado",
    "videoSensing.on": "ligado",
    "videoSensing.onFlipped": "inverter",
    "videoSensing.setVideoTransparency": "ajuste transparência do vídeo para [TRANSPARENCY]",
    "videoSensing.sprite": "ator",
    "videoSensing.stage": "palco",
    "videoSensing.videoOn": "vídeo [ATTRIBUTE] para [SUBJECT]",
    "videoSensing.videoToggle": "mude vídeo [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "quando detectar sensor de vídeo> [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]"
}